This benchmark runs the historical queries that are part of 

http://cs.nyu.edu/shasha/fintime.html


To reproduce:
1 - Use the Makefile provided:
  cd src/
  a) to build the default data (2000 stock ids, 4000 days):
     skip step (b)
  b) to build with arbitrary # of stock ids
    export BENCHMARKSIZE=n
  c) call make with the name of systems you'd like to benchmark  
    make aquery pandas monetdb sybase
  will build the entire system (note that it is your responsibility to have
  all requirements installed: i.e. monetdb + pyapi branch, sybase etc
  and source necessary files (.e.g source IQ16.sh for sybase)
  )
  Note that aquery always builds (as does q)
  
Finally, you can run the experiments with
./run_benchmark.sh your_csv_path_for_results.csv per_query_iterations benchmark_iterations

Note that you should provide an absolute path for outputting results, as the script
changes directories during execution.

In order to run the monetdb benchmarking, you will need to build from source
the pyapi branch, as per

https://www.monetdb.org/blog/embedded-pythonnumpy-monetdb

If you are building on OSX (which is what we used here), you will likely find the 
following helpful:
  For general installation info
     https://www.monetdb.org/Developers/SourceCompile/OSX
     https://www.monetdb.org/Developers/SourceCompile

Additionally, the following file might need editing
  MonetDB-pyapi/monetdb5/extras/pyapi/benchmark.c
  Namely, Mac OSX doesn't have 
  
  clock_gettime(CLOCK_MONOTONIC, timespec);
  
In our case, we didn't need this, so we just commented out. Your approach might
be different.
  
