// Loading in data and tables using verbatim q
<q>
path:hsym`$"/Users/josecambronero/MS/S15/aquery/src/benchmark/fintime/src/experiments"
base:get ` sv path,`base
price:get ` sv path,`price
split:get ` sv path,`split

// Retrieve randomly created lists
stock10:get ` sv path,`stock10
startYear10:get ` sv path,`startYear10
stock1000:get ` sv path,`stock1000
start300Days:get ` sv path,`start300Days
startPeriod:get ` sv path,`startPeriod
endPeriod:get ` sv path,`endPeriod
SP500:get ` sv path,`SP500
start6Mo:get ` sv path,`start6Mo
</q>


/*
Get the closing price of a set of 10 stocks for a 10-year period and group into weekly, monthly and yearly aggregates. For each aggregate period determine the low, high and average closing price value. The output should be sorted by id and trade date.
*/

//query 1
WITH
 // our main source of information, localized, avoiding rerunning for each aggregation
 Target(Id, TradeDate, ClosePrice)  AS (select 
 Id, TradeDate,ClosePrice
 FROM price
 where Id in stock10 and TradeDate >= startYear10 and TradeDate < startYear10 + 365 * 10)

  weekly(Id, bucket, name, low, high, mean) AS (select 
    Id,
    first(floor((TradeDate - startYear10)/7)),
    "weekly",
    min(ClosePrice), 
	 	max(ClosePrice), avg(ClosePrice)
  	from Target group by Id, floor((TradeDate - startYear10)/7))
	
  monthly(Id, bucket, name, low, high, mean) AS (select
    Id,
    first(floor((TradeDate - startYear10)/31)),
    "monthly",
     min(ClosePrice), 
	 	 max(ClosePrice), 
     avg(ClosePrice)
  	 from Target group by Id, floor((TradeDate - startYear10)/31))
	
  yearly(Id, bucket, name, low, high, mean) AS (select
    Id,
    first(floor((TradeDate - startYear10)/365)),
    "yearly",
     min(ClosePrice), 
	 	 max(ClosePrice), 
     avg(ClosePrice)
  	 from Target group by Id, floor((TradeDate - startYear10)/365))
		
select * from CONCATENATE(weekly, monthly, yearly) assuming asc Id, asc name, asc bucket


/*
Adjust all prices and volumes (prices are multiplied by the split factor and volumes are divided by the split factor) for a set of 1000 stocks to reflect the split events during a specified 300 day period, assuming that events occur before the first trade of the split date. These are called split-adjusted prices and volumes.
*/

WITH
  pxdata as (select * from price where Id in stock1000 and TradeDate >= start300Days and TradeDate < start300Days + 300)
  splitdata as (select from split where Id in stock1000 and SplitDate >= start300Days, SplitDate < start300Days + 300)
result:select HighPrice:first HighPrice*prd 1%SplitFactor,LowPrice:first LowPrice*prd 1%SplitFactor,ClosePrice:first ClosePrice*prd 1%SplitFactor,OpenPrice:first OpenPrice*prd 1%SplitFactor,Volume:first Volume*prd SplitFactor by Id, TradeDate from ej[`Id;pxdata;splitdata] where TradeDate < SplitDate;





/*
Calculate the value of the S&P500 and Russell 2000 index for a specified day using unadjusted prices and the index composition of the 2 indexes (see appendix for spec) on the specified day
TODO
*/


/*
For each stock in a specified list of 1000 stocks, find the differences between the daily high and daily low on the day of each split event during a specified period.
*/
<q>stocks:til 1000</q>
<q>dates:.....</q>

With
 stockPrices as (SELECT * from prices where Id in stocks)
 splitInfo(Id, TradeDate) as (SELECT Id, SplitDate from splits where SplitDate in dates)
 
 select HighPrice - lowPrice
 stockPrices inner join splitInfo on (Id, TradeDate)
 group by Id, TradeDate
END


/*
Find the 21-day and 5-day moving average price for a specified list of 1000 stocks during a 6-month period. (Use split adjusted prices)
*/
WITH
avgInfo as (select 
  avgs(21, ClosePrice) as ma21,
	avgs(5, ClosePrice) as m5
	from prices assuming asc TradeDate 
	where Id in stocks group by Id
	
select * from FLATTEN(avgInfo)
END


/*
	
(Based on the previous query) Find the points (specific days) when the 5-month moving average intersects the 21-day moving average for these stocks. The output is to be sorted by id and date.
*/
WITH
avgInfo as (select 
  avgs(21, ClosePrice) as ma21,
	avgs(5, ClosePrice) as m5
	from prices assuming asc TradeDate 
	where Id in stocks group by Id
	
crossing as (select * 
	from FLATTEN(avgInfo)
	where Id = prev(Id) and 
	(prev(ma5) < prev(ma21) and
	 ma5 >= ma21) or 
	(prev(ma5) > prev(ma21) and
	ma5 <= m121
	))
	
	select * from crossing assuming asc Id, asc TradeDate	
END

/*
Find the pair-wise coefficients of correlation in a set of 10 securities for a 2 year period. Sort the securities by the coefficient of correlation, indicating the pair of securities corresponding to that row. [Note: coefficient of correlation defined in appendix]
*/
<q>stock10:til 10</q>
corr
WITH
  subset as (select * from price where Id in stock10)
	pairs as (select * from subset as s1,subset as s2 where s1.Id <> s2.Id)
	
	select corr(s1.ClosePrice, s2.ClosePrice) as correlation
	from  pairs groupby s1.Id, s2.Id
END













