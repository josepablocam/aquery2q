This is a visualization tool for aquery.
We use the q-R interface to query a q process from an R server that executes
a shiny (simple web browser) application. Plotting is done with the elegant
R ggplot2 library.
     
Predefined queries are stored in the aquery/ folder. During use of the application
new queries are temporarily written to a text file, compiled into q, and then
fed to the process. The user need not worry about details however.
  
INSTRUCTIONS:

MAC OS-X
---------
Our installation uses homebrew, so it might be best to run `brew update` prior to
running anything here, so as to guarantee you have all the latest formulas.

All binaries necessary have been included here. You only need to have gcc48
and R 3.* version. If you do not have these, or are unsure, you can simply run
./install_brew.sh

This script checks for these 2 dependencies and installs using homebrew (http://brew.sh/) 
(prompting the user prior to any installs).
If you use a different package manager, or would like to install from source, that
is your responsibility (see instructions for LINUX, but skip (1) and (2)).


LINUX
-----
1 - Replaces the q-R interface related files as needed for your system
    http://code.kx.com/wiki/Cookbook/IntegratingWithR
2 - Download q (replace folder in src/visualize/q)
    https://kx.com/software-download.php
3 - Download gcc-4.8 (symbolically link or rename as gcc48)
4 - Download R 3.*
5 - Make sure the both gcc48 and R are in your PATH environment variable
6 - Call `make` to compile everything needed and download R dependencies

WINDOWS
-------
Sorry, this is not currently available for windows.


Once you have everything set up, you can run the visualization app by calling
./run_viz.sh <port-number>, where <port-number> is an open port used to a background
q process (which executes AQuery code and communicates with R).




