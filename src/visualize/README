This is a visualization tool for aquery.
We use the q-R interface to query a q process from an R server that executes
a shiny (simple web browser) application. Plotting is done with the elegant
R ggplot2 library.
     
Every query in an aquery file is wrapped and stored for reexecution at command
under a function in the .aq namespace. The first query is wrapped in .aq.q0, the second
in .aq.q1 and so on.
 
To visualize a particular query simply call .aq.qx from the R program's browser
interface.
 
 
INSTRUCTIONS:

MAC OS-X
---------
All binaries necessary have been included here. You only need to have gcc48
and R 3.* version. If you do not have these, or are unsure, you can simply run
./install_brew.sh

This script checks for these 2 dependencies and installs using homebrew (http://brew.sh/) 
(prompting the user prior to any installs).
If you use a different package manager, or would like to install from source, that
is your responsibility.


LINUX
-----
You will need to run
`make`
so as to recompile all necessary pieces. This will also download all R packages
necessary for your system. Note that if you don't have gcc48 and R 3.* you will
need to install these before running make. You will also need to replace
the q-R interface related files before running `make`. 
See http://code.kx.com/wiki/Cookbook/IntegratingWithR for more information.


WINDOWS
-------
Sorry, this is not currently availble for windows.





Once you have everything set up, you can call a simple proof of concept
which compiles a trivial query (poc.a) and serves the browser application
by calling
`./run_poc.sh my_port` where you replace the my_port with the port number you 
would like to assign to the q program




