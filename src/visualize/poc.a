// Moving variance calculation for technology stocks
CREATE TABLE prices (
  Open          FLOAT,
  High          FLOAT,
  Low           FLOAT,
  Close         FLOAT,
  Volume        FLOAT,
  EndOfDayPrice FLOAT,
  ID            STRING,
  Date          DATE
)

LOAD DATA INFILE "./data/sp500_eod_complete_data.csv" INTO TABLE prices
FIELDS TERMINATED BY  ","

// moving variance for technology stocks
WITH
  variances(Date, ID, mv) AS (
    SELECT Date, ID,
      vars(12, ratios(1, EndOfDayPrice) - 1)
      FROM prices
      ASSUMING ASC Date
      WHERE ID in ("HP", "ORCL", "YHOO")
      AND Date >= '01/01/2015'
      GROUP BY ID
  )

SELECT * FROM FLATTEN(variances)


// Correlation of returns calculation for data
<q>
\S 1
corrTickers10:neg[10]?exec distinct ID from prices
</q>

WITH
  stocksGrouped(ID, Ret) AS (
    SELECT ID, ratios(1, EndOfDayPrice) - 1
    FROM prices
    ASSUMING ASC ID, ASC Date
    WHERE ID in corrTickers10 AND
    Date >= max(Date) - 31 * 6
    GROUP BY ID)

  pairsGrouped(ID1, ID2, R1, R2) AS (
    SELECT st1.ID, st2.ID, 
    st1.Ret, st2.Ret
    FROM stocksGrouped st1, stocksGrouped st2)
  
SELECT ID1, ID2,
cor(R1, R2) as coef 
FROM FLATTEN(pairsGrouped)
WHERE ID1 != ID2
GROUP BY ID1, ID2


// Moving Average Query for a specific stock
WITH
  mavgPrices(Date, Price, m21, m5) AS (
    SELECT 
    Date, 
    EndOfDayPrice,
    avgs(21,  EndOfDayPrice),
    avgs(5,  EndOfDayPrice)
    FROM prices
    ASSUMING ASC Date
    WHERE ID="HP"
    AND Date >= '01/01/2014')

// some simple if-else clauses to generate points
// for plotting signals
SELECT Date, Price,
m21, m5, 
CASE (prev(m5) <= prev(m21) & m5 > m21) 
 WHEN TRUE THEN
   Price
 ELSE make_null(Price)
 END as BuySignal,
CASE (prev(m5) >= prev(m21) & m5 < m21) 
WHEN TRUE THEN
  Price
ELSE make_null(Price) 
END as SellSignal
FROM mavgPrices


// Running maximum profit query
WITH
  runningProfit(Date, Price, RunningMinPrice, Profit) AS (
    SELECT Date, 
    EndOfDayPrice,
    mins(EndOfDayPrice), 
    EndOfDayPrice - mins(EndOfDayPrice)
    FROM prices
    ASSUMING ASC Date
    WHERE ID = "ORCL"
    AND Date >= '01/01/2015')
  
  markedUp(Date, Price, BestBuyPrice, BestSellPrice, Profit) AS (
    SELECT 
    Date,
    Price,
    CASE 
      WHEN Profit = max(Profit)
        THEN
          RunningMinPrice
        ELSE
          make_null(RunningMinPrice)
    END as BestBuyPrice,
    CASE 
      WHEN Profit = max(Profit)
        THEN
          Price
        ELSE
          make_null(Price)
    END as BestSellPrice,
    Profit
    FROM runningProfit)
    
  SELECT
  Date,
  Price,
  CASE
    WHEN Price = max(BestBuyPrice)
      THEN
        Price
      ELSE
        make_null(Price)
  END as BestBuyPrice,
  BestSellPrice,
  Profit
  FROM markedUp
      
      








